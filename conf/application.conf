play.crypto.secret="1s`20s2deE$r;Io]w^fpx:x^HEQ9eyeF7H:MS10iGOxdh1GH5p/hDw=Sq[ieK]Ndwfg"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# ****************************************** #
# *** ReactiveMongo Plugin configuration *** #
# ****************************************** #
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"

parsers.MultipartFormData.maxLength=10240K

# Simple configuration (by URI)
mongodb.uri = "mongodb://localhost:27017/english"

akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
}

# ReactiveMongo uses the config under the "mongo-async-driver" key
mongo-async-driver.akka = ${akka}


# Legacy configuration (prefer URI)
# mongodb.servers = ["localhost:27017"]
# mongodb.db = "databasename"

# If you want to turn on logging for ReactiveMongo, uncomment and customize this line

#assets.defaultCache="max-age=290304000"

memo = {
  collection.cache = "cache"
  collection.userMessage = "userMessage"
  collection.socketMessage = "socketMessage"
  collection.notifyMessage = "notifyMessage"
}

hub = {
  actor = {
    game = {
      actor = "actor"
      indexer = "indexer"
    }

    renderer = "renderer"
    captcher = "captcher"
    forum = {
      actor = "actorforum"
      indexer = "indexerforum"
    }

    messenger = "messenger"
    router = "router"
    team = {
      indexer = "indexerteam"
    }

    ai = "ai"

    monitor = "monitor"

    tournament = {
      organizer = "organizer"
    }
    simul = "simul"
    timeline = {
      user = "timelineuser"
    }
    bookmark = "bookmark"
    round = {
      map = "roundmap"
    }
    lobby = "lobby"
    relation = "relation"
    challenger = "challenger"
    report = "report"
    shutup = "shutup"
    mod = "mod"
    chat = "chat"
    analyser = "analyser"
    move_broadcast = "move_broadcast"
    user_register = "user_register"
    user_message = "user_message"
  }
}

es {
  host = "107.0.0.1"
  port = 9200
  cluster = "cluster"
}

search = {
  es = {
    host = "107.0.0.1"
    port = 9200
    cluster = "cluster"
  }

  indexes_to_optimize = []
}

indexes_to_optimize = "indexes_to_optimize"

app.scheduler.disabled = false

app.scheduler.debug = true

app.renderer.name = "app-renderer-name"

app.router.name = "app-route-name"

app.web_path = "app-web-path"

paginator {
  max_per_page: 10
}

userSearch = {
  index = "np"
  type = "user"
  paginator = {
    max_per_page = 10
  }
  indexer = {
    name = "userIndexer"
  }
}

collection = {
  //userMessage = "userMessage"
  category = "category"
  user = "user"
}


gridfs = {
  collection = {
    image = "image"
  }
}


security = {
  collection {
    security = "security"
  }
  wiretap = {
    ips = ["192.168.1.1"]
  }
  firewall = {
    enabled = false
    cached = {
      ips = {
        ttl = 3600
      }
    }
    cookie = {
      name = "cookiename"
      enabled = false
    }

    collection = {
      firewall = "firewall"
    }
  }

  flood = {
    duration = 60
  }

  geoip = {
    file = "/tmp"
    cache_ttl = 3600
  }

  email_confirm {
    mailgun {
      api {
        url = ""
        key = ""
      }
      sender = ""
      base_url = ""
    }

    secret = ""
  }

  password_reset {
    mailgun {
      api {
        url = ""
        key = ""
      }
      sender = ""
      base_url = ""
    }

    secret = ""
  }

  tor {
    provider_url = "localhost:9000"
    refresh_delay = 60
  }
  disposable_email{
    provider_url = "localhost:9000"
    refresh_delay = 60
  }
}


cli {
  username = "apiUsername"
}
api {
  token = "apiToken"
}

prismic{
  api_url = ""
}

editor {
  animation {
    duration = 60
  }
}

accessibility {
  blind {
    cookie {
      name = ""
      max_age = 3600
      salt = ""
    }
  }
}

i18n {
  web_path{
    relative = "relative"
  }
  file_path{
    relative = ""
  }
  upstream{
    url_pattern = ""
  }
  hide_calls{
    cookie {
      name = ""
      max_age = 3600
    }
  }

  collection{
    translation = "translation"
  }

  context {
    git {
      url = ""
      file = ""
    }
  }

  #cdn_domain = "localhost:9000"
  cdn_domain = "192.168.1.25:9000"

  request_handler{
    protocol = "http"
  }

  call {
    threshold = 1000
  }
}

net {
  asset {
    domain = "192.168.1.25:9000"
    version = 1
  }

}

game {
  cached {
    nb {
      ttl = 3600
    }
  }
  paginator{
    max_per_page = 10
  }

  captcher {
    name = "captcher"
    duration = 10
  }

  collection{
    game = "collGame"
    crosstable = "crosstable"
  }
  js_path{
    raw = ""
    compiled = ""
  }

  actor {
    name = "actorGame"
  }

  uci_memo {
    ttl = 3600
  }
  net {
    base_url = ""
  }
  pdf {
    exec_path = ""
  }

  png{
    exec_path = ""
  }

  mandatory{
    seconds_to_move = 60
  }
}


forcedev = true

net {
  extra_ports = ["9000", "8080"]
}

product {
  collection {
    product = "product"
    category = "category"
    infolist = "infolist"
  }
}


site {
  socket {
    uid {
      ttl = 3600
    }
    name = "site-socket"
  }


}

socket {
  hub {
    name = "socket-hub-name"
  }
  move_broadcast {
    name = "socket-move_broadcast-name"
  }
  user_register {
    name = "socket-user_register-name"
  }
  population{
    name = "socket-population-name"
  }
}

monitor {
  actor {
    name = "monitor-actor-name"
  }
  socket {
    name = "monitor-socket-name"
    uid {
      ttl = 3600
    }
  }

}

pref {
  collection {
    pref = "pref"
  }
  cache {
    ttl = 10
  }
}


userMessage {
  actor {
    name: "user_message"
  }
}